/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.junit;

import org.assertj.core.api.Assertions;
import org.assertj.core.data.Offset;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class AppTest {
    @Tag("przyklad")
    @Test
    public void przykladowyTest() {
        System.out.println("Przykladowy test");
    }

    @Tag("math")
    @Test
    public void pierwszyTest() {
        App app = new App();

        System.out.println("por√≥wnuje liczby 25 i wynik funkcji");
        assertEquals(20, app.dodaj(10, 10));
    }

    @Tag("FiguryGeometryczne")
    @Tag("Kwadrat")
    @Test
    public void kwadrat() {
        FiguraGeometryczna figura = new Kwadrat(10);

        assertEquals(100, figura.obliczPole());
        assertEquals(40, figura.obliczObwod());
    }

    @Tag("FiguryGeometryczne")
    @Tag("Trojkat")
    @Test
    public void trojkat() {
        FiguraGeometryczna figura = new trojkatRownoboczny(10);

        double poleObczone = figura.obliczPole();
        double poleOczekiwane = 43.30127018922193233800;

        double roznica = Math.abs(poleObczone - poleOczekiwane);

        System.out.println("Roznica: " + roznica);
        assertTrue(roznica < 7.105427357601002E-10);


        assertEquals(30, figura.obliczObwod());

    }

    @Tag("FiguryGeometryczne")
    @Tag("Trojkat")
    @Test
    public void trojkat1() {
        trojkatRownoboczny trojkat = new trojkatRownoboczny(10);

        double poleTrojkata = trojkat.obliczPole();
        double wartoscObliczona = 43.30127018922193233800;

        Offset<Double> testType = Assertions.offset(0.0001);

        Assertions.assertThat(poleTrojkata).isCloseTo(wartoscObliczona,testType);
    }

    @Tag("FiguryGeometryczne")
    @Tag("Kwadrat")
    @Test
    public void kwadrat1() {
        Kwadrat kwadrat = new Kwadrat(10);
        Assertions.assertThat(kwadrat.obliczObwod()).isCloseTo(kwadrat.obliczObwod((a)->4*a,10), Assertions.withinPercentage(5));
    }

    @Tag("FiguraTrojwymiarowa")
    @Test
    public void testFigury(){
        Figura1 figura1 = new Figura1(10);
        figura1.obliczObwod(a->a*a,10);
    }


}
